
/**
 * WordPress components that create the necessary UI elements for the block
 *
 * @see https://developer.wordpress.org/block-editor/packages/packages-components/
 */
import { TextControl, IconButton } from '@wordpress/components';

/**
 * React hook that is used to mark the block wrapper element.
 * It provides all the necessary props like the class name.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops
 */

import { useBlockProps, BlockControls } from '@wordpress/block-editor';
import { getBlockType } from '@wordpress/blocks';

/**
 * The edit function describes the structure of your block in the context of the
 * editor. This represents what the editor will render when the block is used.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit
 *
 * @param {Object}   props               Properties passed to the function.
 * @param {Object}   props.attributes    Available block attributes.
 * @param {Function} props.setAttributes Function that updates individual attributes.
 *
 * @return {WPElement} Element to render.
 */
const Edit = ( { name, attributes, setAttributes } : {name: string, attributes:Object,  setAttributes:Function}) => {
	const blockProps = useBlockProps();
	const {mode} = attributes;

	const {title :blockTitle} = getBlockType( name );

	const toggleMode = () => {
		setAttributes({
			mode: mode === BlockMode.PREVIEW? BlockMode.EDIT : BlockMode.PREVIEW
		});
	}

	const toggleText = mode === BlockMode.PREVIEW? 'Switch to Edit' : 'Switch to Preview';
	const toggleIcon = mode === BlockMode.PREVIEW? 'edit' : 'welcome-view-site';

	const {title} = attributes;

	return (
		<div { ...blockProps }>
			<BlockControls>
				<IconButton
					className = "components-icon-button components-toolbar__control"
					label = {toggleText} icon= {toggleIcon} onClick = {toggleMode}
				/>
			</BlockControls>
			{mode === BlockMode.PREVIEW ? (
				<>
				 Show when it's preview mode 
				</>
			) : (
				<div>
					<h4>{blockTitle} </h4>
					<TextControl
						label="Block Title"
						value={ title }
						onChange={ ( val: any ) => setAttributes( { title: val } ) }
					/>
				</div>
				
			)}
		</div>
	);
}

export default Edit;
